# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import vehicle_sdk.databroker_pb2 as databroker__pb2


class VehicleDataStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDatapoints = channel.unary_unary(
                '/swdc.VehicleData/GetDatapoints',
                request_serializer=databroker__pb2.GetDatapointsRequest.SerializeToString,
                response_deserializer=databroker__pb2.GetDatapointsReply.FromString,
                )
        self.Subscribe = channel.unary_stream(
                '/swdc.VehicleData/Subscribe',
                request_serializer=databroker__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=databroker__pb2.Notification.FromString,
                )
        self.GetMetadata = channel.unary_unary(
                '/swdc.VehicleData/GetMetadata',
                request_serializer=databroker__pb2.GetMetadataRequest.SerializeToString,
                response_deserializer=databroker__pb2.GetMetadataReply.FromString,
                )


class VehicleDataServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDatapoints(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetadata(self, request, context):
        """rpc SubscribeMetadata(SubscribeMetadataRequest)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VehicleDataServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDatapoints': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDatapoints,
                    request_deserializer=databroker__pb2.GetDatapointsRequest.FromString,
                    response_serializer=databroker__pb2.GetDatapointsReply.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=databroker__pb2.SubscribeRequest.FromString,
                    response_serializer=databroker__pb2.Notification.SerializeToString,
            ),
            'GetMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetadata,
                    request_deserializer=databroker__pb2.GetMetadataRequest.FromString,
                    response_serializer=databroker__pb2.GetMetadataReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'swdc.VehicleData', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VehicleData(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDatapoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/swdc.VehicleData/GetDatapoints',
            databroker__pb2.GetDatapointsRequest.SerializeToString,
            databroker__pb2.GetDatapointsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/swdc.VehicleData/Subscribe',
            databroker__pb2.SubscribeRequest.SerializeToString,
            databroker__pb2.Notification.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/swdc.VehicleData/GetMetadata',
            databroker__pb2.GetMetadataRequest.SerializeToString,
            databroker__pb2.GetMetadataReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class VehicleDataReceiverStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StreamingSet = channel.stream_unary(
                '/swdc.VehicleDataReceiver/StreamingSet',
                request_serializer=databroker__pb2.SetPropertyRequest.SerializeToString,
                response_deserializer=databroker__pb2.SetPropertyReply.FromString,
                )


class VehicleDataReceiverServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StreamingSet(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VehicleDataReceiverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StreamingSet': grpc.stream_unary_rpc_method_handler(
                    servicer.StreamingSet,
                    request_deserializer=databroker__pb2.SetPropertyRequest.FromString,
                    response_serializer=databroker__pb2.SetPropertyReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'swdc.VehicleDataReceiver', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VehicleDataReceiver(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StreamingSet(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/swdc.VehicleDataReceiver/StreamingSet',
            databroker__pb2.SetPropertyRequest.SerializeToString,
            databroker__pb2.SetPropertyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
